Добрый день, Сергей Владимирович! 
Практически по всем пунктам критериев Вы идеально выполнили задание, замечательная и красивая работа! :) 

Требования к оформлению кода и GitHub:
+ структура оформления ноутбука: всё последовательно разделено на логические части ячейками MarkDown, описаны цели и задачи, каждый этап работы, подробные сопровождающие пояснения и содержательные выводы о проделанной работе;
+ оформление кода: читаемый и понятный код с грамотными названиями функций и переменных, графики построены по всем правилам визуализации, соблюдение стандартов PEP-8 и документирование функций;
+ на github: отличный подробный readme-файл, содержащий цели и задачи, описание данных, этапов работы над проектом и, самое главное, выводы.

Базовый анализ:
Отлично оформили этот этап: здорово, что посмотрели на граничные значения дат в датасете, пропуски и статистические характеристики данных. В этом разделе может также пригодится метод describe(), который показывает основные статистические характеристики в данных.

Преобразование и очистка + EDA + RFM:
Прекрасно справились с этапом преобразования данных, ничего не упустили из критериев и заданий. 
Здорово, что так подробно покопались в смысле данных и типов транзакций, отдельный плюс за рассмотрение специальных кодов и транзакций с отрицательным числом товаров.
Отличные пояснения к графикам, отдельный плюс за использование функции choropleth и оригинальный тёмный дизайн:)
Также можно попробовать потестировать какие-нибудь статистические гипотезы (например, самое простое - проверить некоторые распределения на нормальность).
Совершенно верно построили RFM-таблицу и очистили её от выбросов. Здорово, что получилось отобразить данные на трёхмерном графике, здесь нечего добавить🙂

Построение моделей, кластеризация:
Здорово, что попробовали алгоритм PCA и далее использовали два типа алгоритма кластеризации. Но если визуализировать полученные после понижения размерности значения - можно увидеть, что данные не разделились в пространстве, что свидетельствует о том, что стоит попробовать другие методы; если данные не “разлетелись” на отдельные облака, то и любой алгоритм кластеризации не спасёт и не даст точных результатов.
В этой ситуации можно было бы попробовать также алгоритм понижения размерности TSNE - он работает гораздо лучше и точнее. К тому же, согласно теории, у нас должно получиться 7 кластеров (по графику типов клиентов). Хоть метрики и показывают лучшее число 3 - это неверный результат, который возник из-за недостаточно качественного понижения размерности. Поэтому по третьему критерию минус 2 балла:(
Попробуйте провести здесь более глубокое исследование - попробовать TSNE и другие алгоритмы кластеризации - например, агломеративную.
Здорово, что разобрались и визуализировали профили кластеров при помощи полярной диаграммы. Отдельный плюс за то, что не забыли правильно прописать отображение графиков plotly, чтобы они показывались на GitHub:
Отличные подробные выводы о проделанной работе и полученных результатах!

Спасибо за выполненное задание! Если возникнут вопросы, можете обратиться ко мне в канал 06-project-6 в пачке, постараюсь ответить на все вопросы и разобраться с моментами, которые вызывают трудности. Удачи в обучении!
